


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text, CODE, READONLY
    2 00000000                 export           FILTER_S
    3 00000000         FILTER_S
    4 00000000         ; This is the subroutine for calculating the filtered va
                       lue.
    5 00000000         ; There are four input arguments:
    6 00000000         ; R0 for the location of array OriginalSignal
    7 00000000         ; R1 for the location of array FilteredSignal
    8 00000000         ; R2 for the number of N
    9 00000000         ; R3 for the number of D
   10 00000000         ; R4 for the counter i
   11 00000000         ; R5 for the counter j
   12 00000000         
   13 00000000 2B00            CMP              R3, #0      ; if (D = 0).
   14 00000002 DD30            BLE              FINISH      ; Quit immediately 
                                                            if D <= 0.
   15 00000004         
   16 00000004 F04F 0400       MOV              R4, #0      ; R5 holds the coun
                                                            ter i of the outer 
                                                            loop.
   17 00000008 3C04            SUBS             R4, #4      ; Decrement once fo
                                                            r easier later appl
                                                            ication.
   18 0000000A         
   19 0000000A         ORI_SIG_LOOP
   20 0000000A F104 0404       ADD              R4, R4, #4  ; Increment the loo
                                                            p counter.
   21 0000000E 4294            CMP              R4, R2      ; if (i >= N).
   22 00000010 DA29            BGE              FINISH      ; Quit the loop and
                                                             finish.
   23 00000012         
   24 00000012 EBB4 0653       SUBS             R6, R4, R3, LSR #1 ; R6 holds t
                                                            he value of (i - D 
                                                            / 2).
   25 00000016 EA4F 0686       LSL              R6, R6, #2  ; Multiply R6 by 4 
                                                            to make it a word s
                                                            ize.
   26 0000001A 1F35            SUBS             R5, R6, #4  ; R5 holds the inne
                                                            r loop counter j.
   27 0000001C EB14 0653       ADDS             R6, R4, R3, LSR #1 ; Now R6 hol
                                                            ds the value of (i 
                                                            + D / 2), the upper
                                                             limit of j.
   28 00000020 EA4F 1606       LSL              R6, R6, #4
   29 00000024         
   30 00000024 F04F 0800       MOV              R8, #0      ; R8 is a temporary
                                                             random register
   31 00000028 EE00 8A90       VMOV.f32         S1, R8      ; S1 holds the temp
                                                            orary sum, initiali
                                                            zed to 0.
   32 0000002C EEF8 0A60       VCVT.f32.u32     S1, S1      ; Convert to float
   33 00000030         
   34 00000030 F003 0701       AND              R7, R3, #1  ; if (D % 2 == 0)
   35 00000034 D008            BEQ              EVEN_DEPTH  ; Branch to even if
                                                             true
   36 00000036 E7FF            B                ODD_DEPTH   ; Otherwise to odd.
                                                            
   37 00000038         
   38 00000038         ODD_DEPTH



ARM Macro Assembler    Page 2 


   39 00000038 1D2D            ADDS             R5, R5, #4  ; Increment the cou
                                                            nter
   40 0000003A 42B5            CMP              R5, R6
   41 0000003C DC04            BGT              AVERAGE     ; Branch if (j > i+
                                                            D/2)
   42 0000003E         
   43 0000003E 2D00            CMP              R5, #0
   44 00000040 DBFA            BLT              ODD_DEPTH   ; Return to beginni
                                                            ng of the loop and 
                                                            do nothing if j<0 (
                                                            Out of bounds)
   45 00000042 4295            CMP              R5, R2
   46 00000044 DAF8            BGE              ODD_DEPTH   ; Return to beginni
                                                            ng of the loop and 
                                                            do nothing if j >= 
                                                            N (Out of bounds)
   47 00000046 E7FF            B                AVERAGE     ; Otherwise branch 
                                                            to AVERAGE and perf
                                                            orm calculations fo
                                                            r an average.
   48 00000048         
   49 00000048         EVEN_DEPTH
   50 00000048         
   51 00000048         AVERAGE
   52 00000048 EE01 3A90       VMOV.f32         S3, R3      ; S3 holds the valu
                                                            e of D.
   53 0000004C EEF8 1A61       VCVT.f32.u32     S3, S3      ; Convert the value
                                                             held by S3 to floa
                                                            t
   54 00000050         
   55 00000050 ED90 1A00       VLDR.f32         S2, [R0]    ; S2 holds the valu
                                                            e of the current or
                                                            iginal signal
   56 00000054         
   57 00000054 EE70 0A81       VADD.F32         S1, S1, S2  ; Update the sum
   58 00000058 EE80 0AA1       VDIV.F32         S0, S1, S3  ; Calculation for a
                                                            verage
   59 0000005C 1D00            ADDS             R0, R0, #4  ; R0 points to the 
                                                            next number in the 
                                                            array
   60 0000005E ED81 0A00       VSTR.F32         S0, [R1]    ; Store the average
                                                             result to array fi
                                                            ltered
   61 00000062 1D09            ADDS             R1, R1, #4  ; R1 points to the 
                                                            next number in the 
                                                            array.
   62 00000064 E7D1            B                ORI_SIG_LOOP
   63 00000066         
   64 00000066         FINISH
   65 00000066 4770            BX               LR
   66 00000068                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\filter_s.d -o.\objects\filter_s.o -IP:\ECSE444\GXX_La
b0\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PAC
K\ARM\CMSIS\5.3.0\Device\ARM\ARMCM4\Include --predefine="__EVAL SETA 1" --prede
fine="__UVISION_VERSION SETA 515" --predefine="_RTE_ SETA 1" --predefine="ARMCM
4_FP SETA 1" --list=.\listings\filter_s.lst asm\filter_s.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AVERAGE 00000048

Symbol: AVERAGE
   Definitions
      At line 51 in file asm\filter_s.s
   Uses
      At line 41 in file asm\filter_s.s
      At line 47 in file asm\filter_s.s

EVEN_DEPTH 00000048

Symbol: EVEN_DEPTH
   Definitions
      At line 49 in file asm\filter_s.s
   Uses
      At line 35 in file asm\filter_s.s
Comment: EVEN_DEPTH used once
FILTER_S 00000000

Symbol: FILTER_S
   Definitions
      At line 3 in file asm\filter_s.s
   Uses
      At line 2 in file asm\filter_s.s
Comment: FILTER_S used once
FINISH 00000066

Symbol: FINISH
   Definitions
      At line 64 in file asm\filter_s.s
   Uses
      At line 14 in file asm\filter_s.s
      At line 22 in file asm\filter_s.s

ODD_DEPTH 00000038

Symbol: ODD_DEPTH
   Definitions
      At line 38 in file asm\filter_s.s
   Uses
      At line 36 in file asm\filter_s.s
      At line 44 in file asm\filter_s.s
      At line 46 in file asm\filter_s.s

ORI_SIG_LOOP 0000000A

Symbol: ORI_SIG_LOOP
   Definitions
      At line 19 in file asm\filter_s.s
   Uses
      At line 62 in file asm\filter_s.s
Comment: ORI_SIG_LOOP used once
text 00000000

Symbol: text
   Definitions
      At line 1 in file asm\filter_s.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: text unused
7 symbols
342 symbols in table
